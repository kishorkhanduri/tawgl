{"ast":null,"code":"import { takeEvery, put, call } from \"redux-saga/effects\";\n\n// Calender Redux States\nimport { ADD_NEW_EVENT, DELETE_EVENT, GET_CATEGORIES, GET_EVENTS, UPDATE_EVENT } from \"./actionTypes\";\nimport { getEventsSuccess, getEventsFail, addEventFail, addEventSuccess, updateEventSuccess, updateEventFail, deleteEventSuccess, deleteEventFail, getCategoriesSuccess, getCategoriesFail } from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport { getEvents, addNewEvent, updateEvent, deleteEvent, getCategories } from \"../../helpers/fackBackend_Helper\";\nfunction* fetchEvents() {\n  try {\n    const response = yield call(getEvents);\n    yield put(getEventsSuccess(response));\n  } catch (error) {\n    yield put(getEventsFail(error));\n  }\n}\nfunction onAddNewEvent(_ref) {\n  let {\n    payload: event\n  } = _ref;\n  return function* () {\n    try {\n      const response = yield call(addNewEvent, event);\n      yield put(addEventSuccess(response));\n    } catch (error) {\n      yield put(addEventFail(error));\n    }\n  }();\n}\nfunction onUpdateEvent(_ref2) {\n  let {\n    payload: event\n  } = _ref2;\n  return function* () {\n    try {\n      const response = yield call(updateEvent, event);\n      yield put(updateEventSuccess(response));\n    } catch (error) {\n      yield put(updateEventFail(error));\n    }\n  }();\n}\nfunction onDeleteEvent(_ref3) {\n  let {\n    payload: event\n  } = _ref3;\n  return function* () {\n    try {\n      const response = yield call(deleteEvent, event);\n      yield put(deleteEventSuccess(response));\n    } catch (error) {\n      yield put(deleteEventFail(error));\n    }\n  }();\n}\nfunction* onGetCategories() {\n  try {\n    const response = yield call(getCategories);\n    yield put(getCategoriesSuccess(response));\n  } catch (error) {\n    yield put(getCategoriesFail(error));\n  }\n}\nfunction* calendarSaga() {\n  yield takeEvery(GET_EVENTS, fetchEvents);\n  yield takeEvery(ADD_NEW_EVENT, onAddNewEvent);\n  yield takeEvery(UPDATE_EVENT, onUpdateEvent);\n  yield takeEvery(DELETE_EVENT, onDeleteEvent);\n  yield takeEvery(GET_CATEGORIES, onGetCategories);\n}\nexport default calendarSaga;","map":{"version":3,"names":["takeEvery","put","call","ADD_NEW_EVENT","DELETE_EVENT","GET_CATEGORIES","GET_EVENTS","UPDATE_EVENT","getEventsSuccess","getEventsFail","addEventFail","addEventSuccess","updateEventSuccess","updateEventFail","deleteEventSuccess","deleteEventFail","getCategoriesSuccess","getCategoriesFail","getEvents","addNewEvent","updateEvent","deleteEvent","getCategories","fetchEvents","response","error","onAddNewEvent","_ref","payload","event","onUpdateEvent","_ref2","onDeleteEvent","_ref3","onGetCategories","calendarSaga"],"sources":["D:/excercise-t/src/store/calendar/saga.js"],"sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\"\r\n\r\n// Calender Redux States\r\nimport {\r\n  ADD_NEW_EVENT,\r\n  DELETE_EVENT,\r\n  GET_CATEGORIES,\r\n  GET_EVENTS,\r\n  UPDATE_EVENT,\r\n} from \"./actionTypes\";\r\n\r\nimport {\r\n  getEventsSuccess,\r\n  getEventsFail,\r\n  addEventFail,\r\n  addEventSuccess,\r\n  updateEventSuccess,\r\n  updateEventFail,\r\n  deleteEventSuccess,\r\n  deleteEventFail,\r\n  getCategoriesSuccess,\r\n  getCategoriesFail,\r\n} from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport {\r\n  getEvents,\r\n  addNewEvent,\r\n  updateEvent,\r\n  deleteEvent,\r\n  getCategories,\r\n} from \"../../helpers/fackBackend_Helper\"\r\n\r\nfunction* fetchEvents() {\r\n  try {\r\n    const response = yield call(getEvents)\r\n    yield put(getEventsSuccess(response))\r\n  } catch (error) {\r\n    yield put(getEventsFail(error))\r\n  }\r\n}\r\n\r\nfunction* onAddNewEvent({ payload: event }) {\r\n  try {\r\n    const response = yield call(addNewEvent, event)\r\n    yield put(addEventSuccess(response))\r\n  } catch (error) {\r\n    yield put(addEventFail(error))\r\n  }\r\n}\r\n\r\nfunction* onUpdateEvent({ payload: event }) {\r\n  try {\r\n    const response = yield call(updateEvent, event)\r\n    yield put(updateEventSuccess(response))\r\n  } catch (error) {\r\n    yield put(updateEventFail(error))\r\n  }\r\n}\r\n\r\nfunction* onDeleteEvent({ payload: event }) {\r\n  try {\r\n    const response = yield call(deleteEvent, event)\r\n    yield put(deleteEventSuccess(response))\r\n  } catch (error) {\r\n    yield put(deleteEventFail(error))\r\n  }\r\n}\r\n\r\nfunction* onGetCategories() {\r\n  try {\r\n    const response = yield call(getCategories)\r\n    yield put(getCategoriesSuccess(response))\r\n  } catch (error) {\r\n    yield put(getCategoriesFail(error))\r\n  }\r\n}\r\n\r\nfunction* calendarSaga() {\r\n  yield takeEvery(GET_EVENTS, fetchEvents)\r\n  yield takeEvery(ADD_NEW_EVENT, onAddNewEvent)\r\n  yield takeEvery(UPDATE_EVENT, onUpdateEvent)\r\n  yield takeEvery(DELETE_EVENT, onDeleteEvent)\r\n  yield takeEvery(GET_CATEGORIES, onGetCategories)\r\n}\r\n\r\nexport default calendarSaga\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}