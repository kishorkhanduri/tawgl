{"ast":null,"code":"import _objectSpread from\"D:/excercise-t/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from\"axios\";import MockAdapter from\"axios-mock-adapter\";import*as url from\"../url_helper\";import{calenderDefaultCategories,events,orders,productsData,customerData,shops,cartData,comments,chats,groups,messages,contacts}from\"../../common/data\";var users=[{id:1,username:\"admin\",password:\"123456\",email:\"nandkishor@design.in\"}];var fakeBackend=function fakeBackend(){// This sets the mock adapter on the default instance\nvar mock=new MockAdapter(axios);mock.onPost(\"/post-register\").reply(function(config){var user=JSON.parse(config[\"data\"]);users.push(user);return new Promise(function(resolve,reject){setTimeout(function(){resolve([200,user]);});});});mock.onPost(\"/post-login\").reply(function(config){var user=JSON.parse(config[\"data\"]);var validUser=users.filter(function(usr){return usr.email===user.username&&usr.password===user.password;});return new Promise(function(resolve,reject){setTimeout(function(){if(validUser[\"length\"]===1){resolve([200,validUser[0]]);}else{reject([400,\"Username and password are invalid. Please enter correct username and password\"]);}});});});mock.onPost(\"/forget-pwd\").reply(function(config){// User needs to check that user is eXist or not and send mail for Reset New password\nreturn new Promise(function(resolve,reject){setTimeout(function(){resolve([200,\"Check you mail and reset your password.\"]);});});});mock.onGet(url.GET_EVENTS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(events){// Passing fake JSON data as response\nresolve([200,events]);}else{reject([400,\"Cannot get events\"]);}});});});mock.onPost(url.ADD_NEW_EVENT).reply(function(event){return new Promise(function(resolve,reject){setTimeout(function(){if(event&&event.data){// Passing fake JSON data as response\nresolve([200,event.data]);}else{reject([400,\"Cannot add event\"]);}});});});mock.onPut(url.UPDATE_EVENT).reply(function(event){return new Promise(function(resolve,reject){setTimeout(function(){if(event&&event.data){// Passing fake JSON data as response\nresolve([200,event.data]);}else{reject([400,\"Cannot update event\"]);}});});});mock.onDelete(url.DELETE_EVENT).reply(function(config){return new Promise(function(resolve,reject){setTimeout(function(){if(config&&config.headers){// Passing fake JSON data as response\nresolve([200,config.headers.event]);}else{reject([400,\"Cannot delete event\"]);}});});});mock.onGet(url.GET_CATEGORIES).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(calenderDefaultCategories){// Passing fake JSON data as response\nresolve([200,calenderDefaultCategories]);}else{reject([400,\"Cannot get categories\"]);}});});});mock.onGet(url.GET_PRODUCTS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(productsData){// Passing fake JSON data as response\nresolve([200,productsData]);}else{reject([400,\"Cannot get products\"]);}});});});mock.onGet(new RegExp(\"\".concat(url.GET_PRODUCTS_DETAIL,\"/*\"))).reply(function(config){return new Promise(function(resolve,reject){setTimeout(function(){if(productsData){// Passing fake JSON data as response\nvar params=config.params;var product=productsData.find(function(product){return product.id.toString()===params.id.toString();});resolve([200,_objectSpread(_objectSpread({},product),{},{comments:comments})]);}else{reject([400,\"Cannot get product detail\"]);}});});});mock.onGet(url.GET_ORDERS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(orders){// Passing fake JSON data as response\nresolve([200,orders]);}else{reject([400,\"Cannot get orders\"]);}});});});mock.onGet(url.GET_CART_DATA).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(cartData){// Passing fake JSON data as response\nresolve([200,cartData]);}else{reject([400,\"Cannot get cart data\"]);}});});});mock.onGet(url.GET_CUSTOMERS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(customerData){// Passing fake JSON data as response\nresolve([200,customerData]);}else{reject([400,\"Cannot get customers data\"]);}});});});mock.onGet(url.GET_SHOPS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(shops){// Passing fake JSON data as response\nresolve([200,shops]);}else{reject([400,\"Cannot get shops data\"]);}});});});mock.onGet(url.GET_CHATS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(chats){// Passing fake JSON data as response\nresolve([200,chats]);}else{reject([400,\"Cannot get chats\"]);}});});});mock.onGet(url.GET_GROUPS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(groups){// Passing fake JSON data as response\nresolve([200,groups]);}else{reject([400,\"Cannot get groups\"]);}});});});mock.onGet(url.GET_CONTACTS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(contacts){// Passing fake JSON data as response\nresolve([200,contacts]);}else{reject([400,\"Cannot get contacts\"]);}});});});mock.onGet(new RegExp(\"\".concat(url.GET_MESSAGES,\"/*\"))).reply(function(config){return new Promise(function(resolve,reject){setTimeout(function(){if(messages){// Passing fake JSON data as response\nvar params=config.params;var filteredMessages=messages.filter(function(msg){return msg.roomId===params.roomId;});resolve([200,filteredMessages]);}else{reject([400,\"Cannot get messages\"]);}});});});mock.onPost(url.ADD_MESSAGE).reply(function(config){return new Promise(function(resolve,reject){setTimeout(function(){if(config.data){// Passing fake JSON data as response\nresolve([200,config.data]);}else{reject([400,\"Cannot add message\"]);}});});});};export default fakeBackend;","map":{"version":3,"names":["axios","MockAdapter","url","calenderDefaultCategories","events","orders","productsData","customerData","shops","cartData","comments","chats","groups","messages","contacts","users","id","username","password","email","fakeBackend","mock","onPost","reply","config","user","JSON","parse","push","Promise","resolve","reject","setTimeout","validUser","filter","usr","onGet","GET_EVENTS","ADD_NEW_EVENT","event","data","onPut","UPDATE_EVENT","onDelete","DELETE_EVENT","headers","GET_CATEGORIES","GET_PRODUCTS","RegExp","concat","GET_PRODUCTS_DETAIL","params","product","find","toString","_objectSpread","GET_ORDERS","GET_CART_DATA","GET_CUSTOMERS","GET_SHOPS","GET_CHATS","GET_GROUPS","GET_CONTACTS","GET_MESSAGES","filteredMessages","msg","roomId","ADD_MESSAGE"],"sources":["D:/excercise-t/src/helpers/AuthType/fakeBackend.js"],"sourcesContent":["import axios from \"axios\";\r\nimport MockAdapter from \"axios-mock-adapter\";\r\nimport * as url from \"../url_helper\";\r\n\r\nimport {\r\n  calenderDefaultCategories,\r\n  events,\r\n  orders,\r\n  productsData,\r\n  customerData,\r\n  shops,\r\n  cartData,\r\n  comments,\r\n  chats,\r\n  groups,\r\n  messages,\r\n  contacts,\r\n} from \"../../common/data\";\r\n\r\nlet users = [\r\n  {\r\n    id: 1,\r\n    username: \"admin\",\r\n    password: \"123456\",\r\n    email: \"nandkishor@design.in\",\r\n  },\r\n];\r\n\r\nconst fakeBackend = () => {\r\n  // This sets the mock adapter on the default instance\r\n  var mock = new MockAdapter(axios);\r\n\r\n  mock.onPost(\"/post-register\").reply(function (config) {\r\n    const user = JSON.parse(config[\"data\"]);\r\n    users.push(user);\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        resolve([200, user]);\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onPost(\"/post-login\").reply(function (config) {\r\n    const user = JSON.parse(config[\"data\"]);\r\n    const validUser = users.filter(\r\n      (usr) => usr.email === user.username && usr.password === user.password\r\n    );\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        if (validUser[\"length\"] === 1) {\r\n          resolve([200, validUser[0]]);\r\n        } else {\r\n          reject([\r\n            400,\r\n            \"Username and password are invalid. Please enter correct username and password\",\r\n          ]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onPost(\"/forget-pwd\").reply(function (config) {\r\n    // User needs to check that user is eXist or not and send mail for Reset New password\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        resolve([200, \"Check you mail and reset your password.\"]);\r\n      });\r\n    });\r\n  });\r\n  mock.onGet(url.GET_EVENTS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (events) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, events]);\r\n        } else {\r\n          reject([400, \"Cannot get events\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onPost(url.ADD_NEW_EVENT).reply((event) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (event && event.data) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, event.data]);\r\n        } else {\r\n          reject([400, \"Cannot add event\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onPut(url.UPDATE_EVENT).reply((event) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (event && event.data) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, event.data]);\r\n        } else {\r\n          reject([400, \"Cannot update event\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onDelete(url.DELETE_EVENT).reply((config) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (config && config.headers) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, config.headers.event]);\r\n        } else {\r\n          reject([400, \"Cannot delete event\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_CATEGORIES).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (calenderDefaultCategories) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, calenderDefaultCategories]);\r\n        } else {\r\n          reject([400, \"Cannot get categories\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_PRODUCTS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (productsData) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, productsData]);\r\n        } else {\r\n          reject([400, \"Cannot get products\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(new RegExp(`${url.GET_PRODUCTS_DETAIL}/*`)).reply((config) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (productsData) {\r\n          // Passing fake JSON data as response\r\n          const { params } = config;\r\n          const product = productsData.find(\r\n            (product) => product.id.toString() === params.id.toString()\r\n          );\r\n          resolve([200, { ...product, comments }]);\r\n        } else {\r\n          reject([400, \"Cannot get product detail\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_ORDERS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (orders) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, orders]);\r\n        } else {\r\n          reject([400, \"Cannot get orders\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_CART_DATA).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (cartData) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, cartData]);\r\n        } else {\r\n          reject([400, \"Cannot get cart data\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_CUSTOMERS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (customerData) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, customerData]);\r\n        } else {\r\n          reject([400, \"Cannot get customers data\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_SHOPS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (shops) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, shops]);\r\n        } else {\r\n          reject([400, \"Cannot get shops data\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_CHATS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (chats) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, chats]);\r\n        } else {\r\n          reject([400, \"Cannot get chats\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_GROUPS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (groups) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, groups]);\r\n        } else {\r\n          reject([400, \"Cannot get groups\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(url.GET_CONTACTS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (contacts) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, contacts]);\r\n        } else {\r\n          reject([400, \"Cannot get contacts\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onGet(new RegExp(`${url.GET_MESSAGES}/*`)).reply((config) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (messages) {\r\n          // Passing fake JSON data as response\r\n          const { params } = config;\r\n          const filteredMessages = messages.filter(\r\n            (msg) => msg.roomId === params.roomId\r\n          );\r\n          resolve([200, filteredMessages]);\r\n        } else {\r\n          reject([400, \"Cannot get messages\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  mock.onPost(url.ADD_MESSAGE).reply((config) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (config.data) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, config.data]);\r\n        } else {\r\n          reject([400, \"Cannot add message\"]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default fakeBackend;\r\n"],"mappings":"mGAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAC5C,MAAO,GAAK,CAAAC,GAAG,KAAM,eAAe,CAEpC,OACEC,yBAAyB,CACzBC,MAAM,CACNC,MAAM,CACNC,YAAY,CACZC,YAAY,CACZC,KAAK,CACLC,QAAQ,CACRC,QAAQ,CACRC,KAAK,CACLC,MAAM,CACNC,QAAQ,CACRC,QAAQ,KACH,mBAAmB,CAE1B,GAAI,CAAAC,KAAK,CAAG,CACV,CACEC,EAAE,CAAE,CAAC,CACLC,QAAQ,CAAE,OAAO,CACjBC,QAAQ,CAAE,QAAQ,CAClBC,KAAK,CAAE,sBACT,CAAC,CACF,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB;AACA,GAAI,CAAAC,IAAI,CAAG,GAAI,CAAApB,WAAW,CAACD,KAAK,CAAC,CAEjCqB,IAAI,CAACC,MAAM,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC,SAAUC,MAAM,CAAE,CACpD,GAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC,MAAM,CAAC,CAAC,CACvCT,KAAK,CAACa,IAAI,CAACH,IAAI,CAAC,CAEhB,MAAO,IAAI,CAAAI,OAAO,CAAC,SAAUC,OAAO,CAAEC,MAAM,CAAE,CAC5CC,UAAU,CAAC,UAAY,CACrBF,OAAO,CAAC,CAAC,GAAG,CAAEL,IAAI,CAAC,CAAC,CACtB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFJ,IAAI,CAACC,MAAM,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC,SAAUC,MAAM,CAAE,CACjD,GAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC,MAAM,CAAC,CAAC,CACvC,GAAM,CAAAS,SAAS,CAAGlB,KAAK,CAACmB,MAAM,CAC5B,SAACC,GAAG,QAAK,CAAAA,GAAG,CAAChB,KAAK,GAAKM,IAAI,CAACR,QAAQ,EAAIkB,GAAG,CAACjB,QAAQ,GAAKO,IAAI,CAACP,QAAQ,EACxE,CAAC,CAED,MAAO,IAAI,CAAAW,OAAO,CAAC,SAAUC,OAAO,CAAEC,MAAM,CAAE,CAC5CC,UAAU,CAAC,UAAY,CACrB,GAAIC,SAAS,CAAC,QAAQ,CAAC,GAAK,CAAC,CAAE,CAC7BH,OAAO,CAAC,CAAC,GAAG,CAAEG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC,IAAM,CACLF,MAAM,CAAC,CACL,GAAG,CACH,+EAA+E,CAChF,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACC,MAAM,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC,SAAUC,MAAM,CAAE,CACjD;AAEA,MAAO,IAAI,CAAAK,OAAO,CAAC,SAAUC,OAAO,CAAEC,MAAM,CAAE,CAC5CC,UAAU,CAAC,UAAY,CACrBF,OAAO,CAAC,CAAC,GAAG,CAAE,yCAAyC,CAAC,CAAC,CAC3D,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CACFT,IAAI,CAACe,KAAK,CAAClC,GAAG,CAACmC,UAAU,CAAC,CAACd,KAAK,CAAC,UAAM,CACrC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAI5B,MAAM,CAAE,CACV;AACA0B,OAAO,CAAC,CAAC,GAAG,CAAE1B,MAAM,CAAC,CAAC,CACxB,CAAC,IAAM,CACL2B,MAAM,CAAC,CAAC,GAAG,CAAE,mBAAmB,CAAC,CAAC,CACpC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACC,MAAM,CAACpB,GAAG,CAACoC,aAAa,CAAC,CAACf,KAAK,CAAC,SAACgB,KAAK,CAAK,CAC9C,MAAO,IAAI,CAAAV,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIO,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAE,CACvB;AACAV,OAAO,CAAC,CAAC,GAAG,CAAES,KAAK,CAACC,IAAI,CAAC,CAAC,CAC5B,CAAC,IAAM,CACLT,MAAM,CAAC,CAAC,GAAG,CAAE,kBAAkB,CAAC,CAAC,CACnC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACoB,KAAK,CAACvC,GAAG,CAACwC,YAAY,CAAC,CAACnB,KAAK,CAAC,SAACgB,KAAK,CAAK,CAC5C,MAAO,IAAI,CAAAV,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIO,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAE,CACvB;AACAV,OAAO,CAAC,CAAC,GAAG,CAAES,KAAK,CAACC,IAAI,CAAC,CAAC,CAC5B,CAAC,IAAM,CACLT,MAAM,CAAC,CAAC,GAAG,CAAE,qBAAqB,CAAC,CAAC,CACtC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACsB,QAAQ,CAACzC,GAAG,CAAC0C,YAAY,CAAC,CAACrB,KAAK,CAAC,SAACC,MAAM,CAAK,CAChD,MAAO,IAAI,CAAAK,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIR,MAAM,EAAIA,MAAM,CAACqB,OAAO,CAAE,CAC5B;AACAf,OAAO,CAAC,CAAC,GAAG,CAAEN,MAAM,CAACqB,OAAO,CAACN,KAAK,CAAC,CAAC,CACtC,CAAC,IAAM,CACLR,MAAM,CAAC,CAAC,GAAG,CAAE,qBAAqB,CAAC,CAAC,CACtC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAAC4C,cAAc,CAAC,CAACvB,KAAK,CAAC,UAAM,CACzC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAI7B,yBAAyB,CAAE,CAC7B;AACA2B,OAAO,CAAC,CAAC,GAAG,CAAE3B,yBAAyB,CAAC,CAAC,CAC3C,CAAC,IAAM,CACL4B,MAAM,CAAC,CAAC,GAAG,CAAE,uBAAuB,CAAC,CAAC,CACxC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAAC6C,YAAY,CAAC,CAACxB,KAAK,CAAC,UAAM,CACvC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAI1B,YAAY,CAAE,CAChB;AACAwB,OAAO,CAAC,CAAC,GAAG,CAAExB,YAAY,CAAC,CAAC,CAC9B,CAAC,IAAM,CACLyB,MAAM,CAAC,CAAC,GAAG,CAAE,qBAAqB,CAAC,CAAC,CACtC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAC,GAAI,CAAAY,MAAM,IAAAC,MAAA,CAAI/C,GAAG,CAACgD,mBAAmB,MAAI,CAAC,CAAC,CAAC3B,KAAK,CAAC,SAACC,MAAM,CAAK,CACvE,MAAO,IAAI,CAAAK,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAI1B,YAAY,CAAE,CAChB;AACA,GAAQ,CAAA6C,MAAM,CAAK3B,MAAM,CAAjB2B,MAAM,CACd,GAAM,CAAAC,OAAO,CAAG9C,YAAY,CAAC+C,IAAI,CAC/B,SAACD,OAAO,QAAK,CAAAA,OAAO,CAACpC,EAAE,CAACsC,QAAQ,CAAC,CAAC,GAAKH,MAAM,CAACnC,EAAE,CAACsC,QAAQ,CAAC,CAAC,EAC7D,CAAC,CACDxB,OAAO,CAAC,CAAC,GAAG,CAAAyB,aAAA,CAAAA,aAAA,IAAOH,OAAO,MAAE1C,QAAQ,CAARA,QAAQ,GAAG,CAAC,CAC1C,CAAC,IAAM,CACLqB,MAAM,CAAC,CAAC,GAAG,CAAE,2BAA2B,CAAC,CAAC,CAC5C,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAACsD,UAAU,CAAC,CAACjC,KAAK,CAAC,UAAM,CACrC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAI3B,MAAM,CAAE,CACV;AACAyB,OAAO,CAAC,CAAC,GAAG,CAAEzB,MAAM,CAAC,CAAC,CACxB,CAAC,IAAM,CACL0B,MAAM,CAAC,CAAC,GAAG,CAAE,mBAAmB,CAAC,CAAC,CACpC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAACuD,aAAa,CAAC,CAAClC,KAAK,CAAC,UAAM,CACxC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIvB,QAAQ,CAAE,CACZ;AACAqB,OAAO,CAAC,CAAC,GAAG,CAAErB,QAAQ,CAAC,CAAC,CAC1B,CAAC,IAAM,CACLsB,MAAM,CAAC,CAAC,GAAG,CAAE,sBAAsB,CAAC,CAAC,CACvC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAACwD,aAAa,CAAC,CAACnC,KAAK,CAAC,UAAM,CACxC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIzB,YAAY,CAAE,CAChB;AACAuB,OAAO,CAAC,CAAC,GAAG,CAAEvB,YAAY,CAAC,CAAC,CAC9B,CAAC,IAAM,CACLwB,MAAM,CAAC,CAAC,GAAG,CAAE,2BAA2B,CAAC,CAAC,CAC5C,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAACyD,SAAS,CAAC,CAACpC,KAAK,CAAC,UAAM,CACpC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIxB,KAAK,CAAE,CACT;AACAsB,OAAO,CAAC,CAAC,GAAG,CAAEtB,KAAK,CAAC,CAAC,CACvB,CAAC,IAAM,CACLuB,MAAM,CAAC,CAAC,GAAG,CAAE,uBAAuB,CAAC,CAAC,CACxC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAAC0D,SAAS,CAAC,CAACrC,KAAK,CAAC,UAAM,CACpC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIrB,KAAK,CAAE,CACT;AACAmB,OAAO,CAAC,CAAC,GAAG,CAAEnB,KAAK,CAAC,CAAC,CACvB,CAAC,IAAM,CACLoB,MAAM,CAAC,CAAC,GAAG,CAAE,kBAAkB,CAAC,CAAC,CACnC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAAC2D,UAAU,CAAC,CAACtC,KAAK,CAAC,UAAM,CACrC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIpB,MAAM,CAAE,CACV;AACAkB,OAAO,CAAC,CAAC,GAAG,CAAElB,MAAM,CAAC,CAAC,CACxB,CAAC,IAAM,CACLmB,MAAM,CAAC,CAAC,GAAG,CAAE,mBAAmB,CAAC,CAAC,CACpC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAClC,GAAG,CAAC4D,YAAY,CAAC,CAACvC,KAAK,CAAC,UAAM,CACvC,MAAO,IAAI,CAAAM,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIlB,QAAQ,CAAE,CACZ;AACAgB,OAAO,CAAC,CAAC,GAAG,CAAEhB,QAAQ,CAAC,CAAC,CAC1B,CAAC,IAAM,CACLiB,MAAM,CAAC,CAAC,GAAG,CAAE,qBAAqB,CAAC,CAAC,CACtC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACe,KAAK,CAAC,GAAI,CAAAY,MAAM,IAAAC,MAAA,CAAI/C,GAAG,CAAC6D,YAAY,MAAI,CAAC,CAAC,CAACxC,KAAK,CAAC,SAACC,MAAM,CAAK,CAChE,MAAO,IAAI,CAAAK,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAInB,QAAQ,CAAE,CACZ;AACA,GAAQ,CAAAsC,MAAM,CAAK3B,MAAM,CAAjB2B,MAAM,CACd,GAAM,CAAAa,gBAAgB,CAAGnD,QAAQ,CAACqB,MAAM,CACtC,SAAC+B,GAAG,QAAK,CAAAA,GAAG,CAACC,MAAM,GAAKf,MAAM,CAACe,MAAM,EACvC,CAAC,CACDpC,OAAO,CAAC,CAAC,GAAG,CAAEkC,gBAAgB,CAAC,CAAC,CAClC,CAAC,IAAM,CACLjC,MAAM,CAAC,CAAC,GAAG,CAAE,qBAAqB,CAAC,CAAC,CACtC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFV,IAAI,CAACC,MAAM,CAACpB,GAAG,CAACiE,WAAW,CAAC,CAAC5C,KAAK,CAAC,SAACC,MAAM,CAAK,CAC7C,MAAO,IAAI,CAAAK,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIR,MAAM,CAACgB,IAAI,CAAE,CACf;AACAV,OAAO,CAAC,CAAC,GAAG,CAAEN,MAAM,CAACgB,IAAI,CAAC,CAAC,CAC7B,CAAC,IAAM,CACLT,MAAM,CAAC,CAAC,GAAG,CAAE,oBAAoB,CAAC,CAAC,CACrC,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAED,cAAe,CAAAX,WAAW"},"metadata":{},"sourceType":"module"}