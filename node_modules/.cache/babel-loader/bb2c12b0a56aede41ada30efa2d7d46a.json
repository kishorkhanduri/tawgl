{"ast":null,"code":"import _regeneratorRuntime from\"D:/excercise-t/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";var _marked=/*#__PURE__*/_regeneratorRuntime().mark(watchUserRegister),_marked2=/*#__PURE__*/_regeneratorRuntime().mark(accountSaga);import{takeEvery,fork,put,all,call}from'redux-saga/effects';//Account Redux states\nimport{REGISTER_USER}from'./actionTypes';import{registerUserSuccessful,registerUserFailed}from'./actions';//AUTH related methods\nimport{postRegister}from'../../../helpers/fackBackend_Helper';import{getFirebaseBackend}from'../../../helpers/firebase_helper';// initialize firebase Auth\nvar fireBaseBackend=getFirebaseBackend();// Is user register successfull then direct plot user in redux.\nfunction registerUser(_ref){var user=_ref.payload.user;return/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,_response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;if(!(process.env.REACT_APP_DEFAULTAUTH===\"firebase\")){_context.next=9;break;}_context.next=4;return call(fireBaseBackend.registerUser,user.email,user.password);case 4:response=_context.sent;_context.next=7;return put(registerUserSuccessful(response));case 7:_context.next=14;break;case 9:_context.next=11;return call(postRegister,'/post-register',user);case 11:_response=_context.sent;_context.next=14;return put(registerUserSuccessful(_response));case 14:_context.next=20;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](0);_context.next=20;return put(registerUserFailed(_context.t0));case 20:case\"end\":return _context.stop();}},_callee,null,[[0,16]]);})();}export function watchUserRegister(){return _regeneratorRuntime().wrap(function watchUserRegister$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(REGISTER_USER,registerUser);case 2:case\"end\":return _context2.stop();}},_marked);}function accountSaga(){return _regeneratorRuntime().wrap(function accountSaga$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([fork(watchUserRegister)]);case 2:case\"end\":return _context3.stop();}},_marked2);}export default accountSaga;","map":{"version":3,"names":["watchUserRegister","_marked2","_regeneratorRuntime","mark","accountSaga","takeEvery","fork","put","all","call","REGISTER_USER","registerUserSuccessful","registerUserFailed","postRegister","getFirebaseBackend","fireBaseBackend","registerUser","_ref","user","payload","_callee","response","_response","wrap","_callee$","_context","prev","next","process","env","REACT_APP_DEFAULTAUTH","email","password","sent","t0","stop","watchUserRegister$","_context2","_marked","accountSaga$","_context3"],"sources":["D:/excercise-t/src/store/auth/register/saga.js"],"sourcesContent":["import { takeEvery, fork, put, all, call } from 'redux-saga/effects';\r\n\r\n//Account Redux states\r\nimport { REGISTER_USER } from './actionTypes';\r\nimport { registerUserSuccessful, registerUserFailed } from './actions';\r\n\r\n//AUTH related methods\r\nimport { postRegister } from '../../../helpers/fackBackend_Helper';\r\nimport { getFirebaseBackend } from '../../../helpers/firebase_helper';\r\n\r\n// initialize firebase Auth\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n// Is user register successfull then direct plot user in redux.\r\nfunction* registerUser({ payload: { user } }) {\r\n    try {\r\n        if(process.env.REACT_APP_DEFAULTAUTH === \"firebase\"){\r\n            const response = yield call(fireBaseBackend.registerUser, user.email, user.password);\r\n            yield put(registerUserSuccessful(response));\r\n        }\r\n        else{\r\n            const response = yield call(postRegister, '/post-register', user);\r\n            yield put(registerUserSuccessful(response));\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserFailed(error));\r\n    }\r\n}\r\n\r\nexport function* watchUserRegister() {\r\n    yield takeEvery(REGISTER_USER, registerUser)\r\n}\r\n\r\nfunction* accountSaga() {\r\n    yield all([fork(watchUserRegister)]);\r\n}\r\n\r\nexport default accountSaga;"],"mappings":"kKA6BiBA,iBAAiB,EAAAC,QAAA,cAAAC,mBAAA,GAAAC,IAAA,CAIxBC,WAAW,EAjCrB,OAASC,SAAS,CAAEC,IAAI,CAAEC,GAAG,CAAEC,GAAG,CAAEC,IAAI,KAAQ,oBAAoB,CAEpE;AACA,OAASC,aAAa,KAAQ,eAAe,CAC7C,OAASC,sBAAsB,CAAEC,kBAAkB,KAAQ,WAAW,CAEtE;AACA,OAASC,YAAY,KAAQ,qCAAqC,CAClE,OAASC,kBAAkB,KAAQ,kCAAkC,CAErE;AACA,GAAM,CAAAC,eAAe,CAAGD,kBAAkB,CAAC,CAAC,CAE5C;AACA,QAAU,CAAAE,YAAYA,CAAAC,IAAA,KAAc,CAAAC,IAAI,CAAAD,IAAA,CAAfE,OAAO,CAAID,IAAI,oBAAAhB,mBAAA,GAAAC,IAAA,UAAAiB,QAAA,MAAAC,QAAA,CAAAC,SAAA,QAAApB,mBAAA,GAAAqB,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,QAE7BE,OAAO,CAACC,GAAG,CAACC,qBAAqB,GAAK,UAAU,GAAAL,QAAA,CAAAE,IAAA,UAAAF,QAAA,CAAAE,IAAA,GAC9B,MAAM,CAAAlB,IAAI,CAACM,eAAe,CAACC,YAAY,CAAEE,IAAI,CAACa,KAAK,CAAEb,IAAI,CAACc,QAAQ,CAAC,QAA9EX,QAAQ,CAAAI,QAAA,CAAAQ,IAAA,CAAAR,QAAA,CAAAE,IAAA,GACd,MAAM,CAAApB,GAAG,CAACI,sBAAsB,CAACU,QAAQ,CAAC,CAAC,QAAAI,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAE,IAAA,IAG1B,MAAM,CAAAlB,IAAI,CAACI,YAAY,CAAE,gBAAgB,CAAEK,IAAI,CAAC,SAA3DG,SAAQ,CAAAI,QAAA,CAAAQ,IAAA,CAAAR,QAAA,CAAAE,IAAA,IACd,MAAM,CAAApB,GAAG,CAACI,sBAAsB,CAACU,SAAQ,CAAC,CAAC,SAAAI,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAS,EAAA,CAAAT,QAAA,aAAAA,QAAA,CAAAE,IAAA,IAG/C,MAAM,CAAApB,GAAG,CAACK,kBAAkB,CAAAa,QAAA,CAAAS,EAAM,CAAC,CAAC,0BAAAT,QAAA,CAAAU,IAAA,MAAAf,OAAA,sBAI5C,MAAO,SAAU,CAAApB,iBAAiBA,CAAA,SAAAE,mBAAA,GAAAqB,IAAA,UAAAa,mBAAAC,SAAA,iBAAAA,SAAA,CAAAX,IAAA,CAAAW,SAAA,CAAAV,IAAA,SAAAU,SAAA,CAAAV,IAAA,GAC9B,MAAM,CAAAtB,SAAS,CAACK,aAAa,CAAEM,YAAY,CAAC,yBAAAqB,SAAA,CAAAF,IAAA,MAAAG,OAAA,GAGhD,QAAU,CAAAlC,WAAWA,CAAA,SAAAF,mBAAA,GAAAqB,IAAA,UAAAgB,aAAAC,SAAA,iBAAAA,SAAA,CAAAd,IAAA,CAAAc,SAAA,CAAAb,IAAA,SAAAa,SAAA,CAAAb,IAAA,GACjB,MAAM,CAAAnB,GAAG,CAAC,CAACF,IAAI,CAACN,iBAAiB,CAAC,CAAC,CAAC,yBAAAwC,SAAA,CAAAL,IAAA,MAAAlC,QAAA,GAGxC,cAAe,CAAAG,WAAW"},"metadata":{},"sourceType":"module"}