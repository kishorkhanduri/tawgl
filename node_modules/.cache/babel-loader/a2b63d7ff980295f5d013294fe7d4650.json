{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\n\n// Ecommerce Redux States\nimport { GET_CART_DATA, GET_CUSTOMERS, GET_ORDERS, GET_PRODUCT_DETAIL, GET_PRODUCTS, GET_SHOPS } from \"./actionTypes\";\nimport { getCartDataFail, getCartDataSuccess, getCustomersFail, getCustomersSuccess, getOrdersFail, getOrdersSuccess, getProductDetailFail, getProductDetailSuccess, getProductsFail, getProductsSuccess, getShopsFail, getShopsSuccess } from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport { getCartData, getCustomers, getOrders, getProducts, getShops, getProductDetail } from \"../../helpers/fackBackend_Helper\";\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsFail(error));\n  }\n}\nfunction fetchProductDetail(_ref) {\n  let {\n    productId\n  } = _ref;\n  return function* () {\n    try {\n      const response = yield call(getProductDetail, productId);\n      yield put(getProductDetailSuccess(response));\n    } catch (error) {\n      yield put(getProductDetailFail(error));\n    }\n  }();\n}\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders);\n    yield put(getOrdersSuccess(response));\n  } catch (error) {\n    yield put(getOrdersFail(error));\n  }\n}\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData);\n    yield put(getCartDataSuccess(response));\n  } catch (error) {\n    yield put(getCartDataFail(error));\n  }\n}\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers);\n    yield put(getCustomersSuccess(response));\n  } catch (error) {\n    yield put(getCustomersFail(error));\n  }\n}\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops);\n    yield put(getShopsSuccess(response));\n  } catch (error) {\n    yield put(getShopsFail(error));\n  }\n}\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts);\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail);\n  yield takeEvery(GET_ORDERS, fetchOrders);\n  yield takeEvery(GET_CART_DATA, fetchCartData);\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers);\n  yield takeEvery(GET_SHOPS, fetchShops);\n}\nexport default ecommerceSaga;","map":{"version":3,"names":["call","put","takeEvery","GET_CART_DATA","GET_CUSTOMERS","GET_ORDERS","GET_PRODUCT_DETAIL","GET_PRODUCTS","GET_SHOPS","getCartDataFail","getCartDataSuccess","getCustomersFail","getCustomersSuccess","getOrdersFail","getOrdersSuccess","getProductDetailFail","getProductDetailSuccess","getProductsFail","getProductsSuccess","getShopsFail","getShopsSuccess","getCartData","getCustomers","getOrders","getProducts","getShops","getProductDetail","fetchProducts","response","error","fetchProductDetail","_ref","productId","fetchOrders","fetchCartData","fetchCustomers","fetchShops","ecommerceSaga"],"sources":["D:/excercise-t/src/store/e-commerce/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\r\n\r\n// Ecommerce Redux States\r\nimport {\r\n  GET_CART_DATA,\r\n  GET_CUSTOMERS,\r\n  GET_ORDERS,\r\n  GET_PRODUCT_DETAIL,\r\n  GET_PRODUCTS,\r\n  GET_SHOPS,\r\n} from \"./actionTypes\"\r\nimport {\r\n  getCartDataFail,\r\n  getCartDataSuccess,\r\n  getCustomersFail,\r\n  getCustomersSuccess,\r\n  getOrdersFail,\r\n  getOrdersSuccess,\r\n  getProductDetailFail,\r\n  getProductDetailSuccess,\r\n  getProductsFail,\r\n  getProductsSuccess,\r\n  getShopsFail,\r\n  getShopsSuccess,\r\n} from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport {\r\n  getCartData,\r\n  getCustomers,\r\n  getOrders,\r\n  getProducts,\r\n  getShops,\r\n  getProductDetail,\r\n} from \"../../helpers/fackBackend_Helper\"\r\n\r\nfunction* fetchProducts() {\r\n  try {\r\n    const response = yield call(getProducts)\r\n    yield put(getProductsSuccess(response))\r\n  } catch (error) {\r\n    yield put(getProductsFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchProductDetail({ productId }) {\r\n  try {\r\n    const response = yield call(getProductDetail, productId)\r\n    yield put(getProductDetailSuccess(response))\r\n  } catch (error) {\r\n    yield put(getProductDetailFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchOrders() {\r\n  try {\r\n    const response = yield call(getOrders)\r\n    yield put(getOrdersSuccess(response))\r\n  } catch (error) {\r\n    yield put(getOrdersFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchCartData() {\r\n  try {\r\n    const response = yield call(getCartData)\r\n    yield put(getCartDataSuccess(response))\r\n  } catch (error) {\r\n    yield put(getCartDataFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchCustomers() {\r\n  try {\r\n    const response = yield call(getCustomers)\r\n    yield put(getCustomersSuccess(response))\r\n  } catch (error) {\r\n    yield put(getCustomersFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchShops() {\r\n  try {\r\n    const response = yield call(getShops)\r\n    yield put(getShopsSuccess(response))\r\n  } catch (error) {\r\n    yield put(getShopsFail(error))\r\n  }\r\n}\r\n\r\nfunction* ecommerceSaga() {\r\n  yield takeEvery(GET_PRODUCTS, fetchProducts)\r\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail)\r\n  yield takeEvery(GET_ORDERS, fetchOrders)\r\n  yield takeEvery(GET_CART_DATA, fetchCartData)\r\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers)\r\n  yield takeEvery(GET_SHOPS, fetchShops)\r\n}\r\n\r\nexport default ecommerceSaga\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}